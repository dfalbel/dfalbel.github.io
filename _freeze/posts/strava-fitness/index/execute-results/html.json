{
  "hash": "f261ed919639bf50ab6f3040863a347e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hacking your Strava fitness-fatigue graph\"\nauthor: Daniel Falbel\ndate: \"2024-03-20\"\nfilters:\n  - line-highlight\ndraft: true\n---\n\n\n\n\n## Getting data\n\nThe UnixODBC driver manager is required for all databases:\n\n\n## Setup for SQLite\n\nFor SQLite we install `sqliteodbc` again from Homebrew:\n\n\n\n\n::: {.cell}\n\n```{.sh .cell-code}\n## SQLite ODBC drivers\nbrew install sqliteodbc\n```\n:::\n\n\n\n\nThe sqliteodbc driver doesn't configure itself automatically with the unixODBC\ndriver manager, so we need to configure unixODBC so it can correctly find the\nSQLite driver we just installed. Thus you should get an empty data.frame when\nlisting the odbc drivers using:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nodbc::odbcListDrivers()\n#> [1] name      attribute value    \n#> <0 rows> (or 0-length row.names)\n```\n:::\n\n\n\nTo configure ODBC we need to an entry into the `odbcinst.ini` file. If you have \na standard installation of unixODBC, this file is located at `'/opt/homebrew/etc/odbcinst.ini'`.\nIf that files doesn't exist, you can find it's location using the command below\non your terminal:\n\n\n\n\n::: {.cell}\n\n```{.sh .cell-code}\nodbcinst -j | grep DRIVERS\n#$ DRIVERS............: /opt/homebrew/etc/odbcinst.ini\n```\n:::\n\n\n\n\nOpen the drivers file with:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::edit_file(\"/opt/homebrew/etc/odbcinst.ini\")\n```\n:::\n\n\n\n\nYou will add an entry such as:\n\n```\n[SQLite]\nDriver = /opt/homebrew/Cellar/sqliteodbc/0.99991/lib/libsqlite3odbc.dylib\n```\n\nThe path `/opt/homebrew/Cellar/sqliteodbc/0.99991/lib/libsqlite3odbc.dylib` is the\nhomebrew installation location. This is the result from a default installation,\nbut you can find it using:\n\n\n\n\n::: {.cell}\n\n```{.sh .cell-code}\nbrew info sqliteodbc\n```\n:::\n\n::: {.cell source-line-numbers='4'}\n\n```{.sh .cell-code}\n==> sqliteodbc: stable 0.99991 (bottled)\nODBC driver for SQLite\nhttps://ch-werner.homepage.t-online.de/sqliteodbc/\n/opt/homebrew/Cellar/sqliteodbc/0.99991 (24 files, 892.9KB) *\n  Poured from bottle using the formulae.brew.sh API on 2024-03-20 at 13:27:42\nFrom: https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/s/sqliteodbc.rb\nLicense: TCL\n==> Dependencies\nBuild: automake ✘\nRequired: sqlite ✘, unixodbc ✔\n==> Analytics\ninstall: 63 (30 days), 186 (90 days), 850 (365 days)\ninstall-on-request: 63 (30 days), 186 (90 days), 850 (365 days)\nbuild-error: 0 (30 days)\n```\n:::\n\n\n\n\nGet the path in the highlighed line and append `/lib/libsqlite3odbc.dylib` to it.\n\nRestart your session and you should see:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nodbc::odbcListDrivers()\n#     name attribute                                                            value\n# 1 SQLite    Driver /opt/homebrew/Cellar/sqliteodbc/0.99991/lib/libsqlite3odbc.dylib\n```\n:::\n\n\n\n\nYou can now use this driver with the odbc package:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncon <- odbc::dbConnect(odbc::odbc(), driver = \"SQLite\", database=\":memory:\")\n```\n:::\n\n\n\n\n## Setup for PostgreSQL\n\nFor PostgreSQL we install `psqlodbc` again from Homebrew:\n\n\n\n\n::: {.cell}\n\n```{.sh .cell-code}\nbrew install psqlodbc\n```\n:::\n\n\n\n\nOpen the drivers file with:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::edit_file(\"/opt/homebrew/etc/odbcinst.ini\")\n```\n:::\n\n\n\n\nYou will add an entry such as:\n\n```\n[Postgres]\nDriver = /opt/homebrew/Cellar/psqlodbc/16.00.0000/lib/psqlodbcw.so\n```\n\nThe restart your session and connect to a local Postgres database with:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncon <- odbc::dbConnect(odbc::odbc(), driver = \"Postgres\", database=\"test\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}